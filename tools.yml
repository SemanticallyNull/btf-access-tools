version: 2.1

commands:
  setup:
    steps:
      - run:
          name: Setup tunnel
          command: |
            set -eu -o pipefail
            tunnel_file="$(mktemp)"
            ip="$(curl --fail https://checkip.amazonaws.com/)"
            curl -H 'Accept: application/json' \
              -H "Authorization: Bearer ${NGROK_API_TOKEN}" \
              -H "Content-Type: application/json" \
              -H "Ngrok-Version: 2" \
              -d '{"action":"allow","cidr":"'${ip}'/32","description":"'$CIRCLE_BUILD_URL'","ip_policy_id":"ipp_2g8WOhfO5LvyOLMryTabCSeNfsP"}' \
              --fail -o $tunnel_file \
              "https://api.ngrok.com/ip_policy_rules"

            echo "export REPO_URL=\"ssh://git@1.tcp.ngrok.io:28402/root/testing.git\"" >> $BASH_ENV
            echo "export IPR_ID=\"$(jq -r '.id' $tunnel_file | sed 's/tcp\:\/\/\(.*\):\(.*\)/\2/')\"" >> $BASH_ENV
  checkout:
    steps:
      - run:
          name: Clone repo
          command: |
            mkdir ~/.ssh || true
            ssh-keyscan -p 28402 1.tcp.ngrok.io >> ~/.ssh/known_hosts
            GIT_TERMINAL_PROMPT=0 git clone $REPO_URL
  cleanup:
    steps:
      - run:
          name: Cleanup tunnel
          command: |
            set -eu -o pipefail
            curl -H 'Accept: application/json' \
              -H "Authorization: Bearer ${NGROK_API_TOKEN}" \
              -H "Content-Type: application/json" \
              -H "Ngrok-Version: 2" \
              -X DELETE \
              --fail \
              "https://api.ngrok.com/ip_policy_rules/${IPR_ID}"
